name: CI
on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 4 * * *'
jobs:
  Test:
    name: Run tests
    strategy:
      matrix:
        os: [ubuntu-latest,windows-latest]
        jdk: [8,11,17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
      - name: Run tests
        run: mvn -B clean verify -DwithIts
  Deploy:
    name: Deploy to OSSRH
    if: ${{ github.repository_owner == 'reactiverse' && (github.event_name == 'push' || github.event_name == 'schedule') }}
    needs: Test
    runs-on: ubuntu-latest
    env:
      SONATYPE_NEXUS_USERNAME: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      SONATYPE_NEXUS_PASSWORD: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8
      - name: Get project version
        run: echo "PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -B | grep -v '\[')" >> $GITHUB_ENV
      - name: Maven deploy
        if: ${{ endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        run: mvn source:jar deploy -s .gh.maven.settings.xml -DskipTests -B
  Release:
    name: Release to OSSRH
    if: ${{ github.repository_owner == 'reactiverse' && startsWith(github.ref, 'refs/tags/') }}
    needs: Test
    runs-on: ubuntu-latest
    env:
      SONATYPE_NEXUS_USERNAME: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      SONATYPE_NEXUS_PASSWORD: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
            gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
            passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
      - name: Maven deploy
        run: mvn -Prelease,doc-html generate-resources asciidoctor:process-asciidoc deploy scm-publish:publish-scm -s .gh.maven.settings.xml -DskipTests -Dgpg.passphrase=${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }} -B
